// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0

package db

import (
	"context"
	"database/sql"
)

type Querier interface {
	CountAccountByUserID(ctx context.Context, userID int64) (int32, error)
	CreateAccount(ctx context.Context, arg *CreateAccountParams) error
	CreateApplication(ctx context.Context, arg *CreateApplicationParams) error
	CreateFile(ctx context.Context, arg *CreateFileParams) (*File, error)
	CreateFriendRelation(ctx context.Context, arg *CreateFriendRelationParams) error
	CreateGroupNotify(ctx context.Context, arg *CreateGroupNotifyParams) (*GroupNotify, error)
	CreateGroupRelation(ctx context.Context, arg *CreateGroupRelationParams) error
	CreateRelationSetting(ctx context.Context, arg *CreateRelationSettingParams) (*RelationSetting, error)
	CreateUser(ctx context.Context, arg *CreateUserParams) (*User, error)
	DeleteAccount(ctx context.Context, id int64) error
	DeleteApplication(ctx context.Context, arg *DeleteApplicationParams) error
	DeleteFileByID(ctx context.Context, id int64) error
	DeleteGroupNotify(ctx context.Context, id int64) error
	DeleteRelation(ctx context.Context, id int64) error
	DeleteRelationSetting(ctx context.Context, arg *DeleteRelationSettingParams) error
	DeleteUser(ctx context.Context, id int64) error
	ExistEmail(ctx context.Context, email string) (bool, error)
	ExistsAccountByID(ctx context.Context, id int64) (bool, error)
	ExistsAccountByNameAndUserID(ctx context.Context, arg *ExistsAccountByNameAndUserIDParams) (bool, error)
	ExistsUserByID(ctx context.Context, id int64) (bool, error)
	GetAccountByID(ctx context.Context, id int64) (*Account, error)
	GetAccountsByName(ctx context.Context, arg *GetAccountsByNameParams) ([]*GetAccountsByNameRow, error)
	GetAccountsByUserID(ctx context.Context, userID int64) ([]*GetAccountsByUserIDRow, error)
	GetAllEmails(ctx context.Context) ([]string, error)
	GetApplications(ctx context.Context, arg *GetApplicationsParams) ([]*Application, error)
	GetFileByID(ctx context.Context, id int64) (*File, error)
	GetFileByRelationID(ctx context.Context, relationID sql.NullInt64) ([]*File, error)
	GetGroupNotifyByID(ctx context.Context, id int64) (*GroupNotify, error)
	GetGroupRelationByID(ctx context.Context, id int64) (*GetGroupRelationByIDRow, error)
	GetRelationSetting(ctx context.Context, arg *GetRelationSettingParams) (*RelationSetting, error)
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	GetUserByID(ctx context.Context, id int64) (*User, error)
	UpdateAccount(ctx context.Context, arg *UpdateAccountParams) error
	UpdateApplication(ctx context.Context, arg *UpdateApplicationParams) error
	UpdateGroupNotify(ctx context.Context, arg *UpdateGroupNotifyParams) (*GroupNotify, error)
	UpdateGroupRelation(ctx context.Context, arg *UpdateGroupRelationParams) error
	UpdateRelationSetting(ctx context.Context, arg *UpdateRelationSettingParams) (*RelationSetting, error)
	UpdateUser(ctx context.Context, arg *UpdateUserParams) error
}

var _ Querier = (*Queries)(nil)
